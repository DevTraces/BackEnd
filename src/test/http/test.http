### run test controller
GET http://localhost:8080/run-reply

### join test
GET http://localhost:8080/run-sns

### feed delete
DELETE http://localhost:8080/api/feeds/1
Content-Type: application/json


### get one feed
GET http://localhost:8080/api/feeds/1/1
Content-Type: application/json


### get feed List written by {nickname == dongvin99} user
GET http://localhost:8080/api/feeds/dongvin99?userId=1&page=0&pageSize=10
Content-Type: application/json


### get one feed
GET http://localhost:8080/api/feeds/1/1
Content-Type: application/json


### read Reply List OK
GET http://localhost:8080/api/feeds/1/replies?page=0
Content-Type: application/json

### update Reply OK
PUT http://localhost:8080/api/feeds/1/replies/1/1
Content-Type: application/json

{
  "content" : "수정된 댓글"
}

### delete Reply OK
DELETE http://localhost:8080/api/feeds/1/replies/1/1






### create Rereply OK
POST http://localhost:8080/api/feeds/1/replies/1/rereplies/1
Content-Type: application/json

{
  "content" : "새로운 대댓글"
}

### read Rereply list OK
GET http://localhost:8080/api/feeds/1/replies/1/rereplies?page=0
Content-Type: application/json


### update Rereply OK
PUT http://localhost:8080/api/feeds/1/replies/1/rereplies/1/1
Content-Type: application/json

{
  "content" : "수정된 대댓글"
}


### delete Rereply OK
DELETE http://localhost:8080/api/feeds/1/replies/1/rereplies/1/1



### 테스트 유저 생성 & 초기 작업 진행.
POST http://localhost:8080/make-testuser



### 팔로우 관계 설정 / 1>3 - OK
POST http://localhost:8080/api/follows/three?userId=1

### 팔로우 관계 설정 / 1>4 - OK
POST http://localhost:8080/api/follows/four?userId=1




### 팔로우 관계 설정  2> 3 - OK
POST http://localhost:8080/api/follows/three?userId=2

### 팔로우 관계 설정  2> 4 - OK
POST http://localhost:8080/api/follows/four?userId=2

### 팔로우 관계 설정 / 3>2 - OK
POST http://localhost:8080/api/follows/two?userId=3

### 1번 유저가 2번 유저가 팔로우 하고 있는 유저들의 리스트를 확인한다. 1번 유저의 입장에서 2번 유저가 팔로우 하고 있는 3,4번 유저를 팔로우 하고 있지 않으므로 둘다 false로 떠야 맞다. - OK
GET http://localhost:8080/api/follows/following/two?userId=1&page=0

### 1번 유저가 2번 유저를 팔로우 하고 있는 유저들의 리스트를 본다. 2번 유저를 팔로우 하고 있는 유저는 1번과 3번이다. 1번 유저의 입장에서 1번은 자기 자신이고 3번은 1번이 팔로우 하고 있는 사람이므로 3번 유저에 대해서는 true가 떠야 맞다.
GET http://localhost:8080/api/follows/follower/two?userId=1&page=0

### 팔로우 관계 제거 : 1번이 3번을 언팔로우 했다. - OK
DELETE http://localhost:8080/api/follows/three?userId=1






### 테스트 유저 생성 & 초기 작업 진행.
POST http://localhost:8080/make-testuser


### 1번 유저가 5 피드에 좋아요 누름 - OK
POST http://localhost:8080/api/like/5?userId=1

### 2번 유저가 5 피드에 좋아요 누름 - OK
POST http://localhost:8080/api/like/5?userId=2

### 1번 유저가 2 피드에 좋아요 누름 - OK
POST http://localhost:8080/api/like/2?userId=1

### 3번 유저가 2 피드에 좋아요 누름 - OK
POST http://localhost:8080/api/like/2?userId=3

### 4번 유저가 2 피드에 좋아요 누름 - OK
POST http://localhost:8080/api/like/2?userId=4



### 페이지 사이즈 3으로 놓고 좋아요 누른 유저들 조회 0 페이지 조회. - OK
GET http://localhost:8080/api/feeds/like/1?userId=1&page=0&pageSize=3

### 페이지 사이즈 3으로 놓고 좋아요 누른 유저들 조회 1 페이지 조회. - OK
GET http://localhost:8080/api/feeds/like/1?userId=1&page=1&pageSize=3

### 1번이 좋아요 취소. - OK
DELETE http://localhost:8080/api/like/1?userId=1

### 2번이 좋아요 취소. - OK
DELETE http://localhost:8080/api/like/1?userId=2

### 피드 1개 읽기 - 좋아요 개수 잘 들어오나? - OK
GET http://localhost:8080/api/feeds/1?userId=6

### 피드 리스트로 읽기 - 좋아요 개수 잘 들어오나? - OK
GET http://localhost:8080/api/feeds/list/six?userId=6&page=0


### 팔로우 추천 리스트 읽기
GET http://localhost:8080/api/follows/suggestion


### 1번 유저가 메인 피드 읽기 요청 - 피드 구성 API 호출.
GET http://localhost:8080/api/feeds/main?userId=1&page=0


### create Reply OK
POST http://localhost:8080/api/feeds/1/replies?userId=1
Content-Type: application/json

{
  "content" : "새로운 댓글"
}


### delete Reply OK
DELETE http://localhost:8080/api/feeds/1/replies/1?userId=1